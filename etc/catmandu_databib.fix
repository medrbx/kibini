# 003 : ark Roubaix
if marc_match(003_, "mediathequederoubaix.fr")
    add_field(qa.bib.ark_rbx, "ark Roubaix spécifié")
else
    add_field(qa.bib.ark_rbx, "ark Roubaix non spécifié")
end

# 010 : isbn
marc_map(010a, bib.identifier.isbn.$append)

# 011 : issn
marc_map(011a, bib.identifier.issn.$append)

# 033 : ark BnF
marc_map(033a, bib.ark_bnf)
if any_match(bib.ark_bnf, "catalogue.bnf.fr")
    add_field(vd.ark_bnf, "ark BnF récupéré")
else
    add_field(vd.ark_bnf, "ark BnF non récupéré")
end

# 073 : ean
marc_map(073a, bib.identifier.ean.$append)

# 091 : vendangeur
marc_map(091a, vd.action)
if exists(vd.action)
    add_field(qa.vd.action, "vendangeur action spécifiée")
else
	add_field(qa.vd.action, "vendangeur action non spécifiée")
end
lookup(vd.action, "/home/kibini/kibini_prod/etc/catmandu_lk_vd.txt", sep_char:"|")

marc_map(091b, vd.date) # remettre la date au format YYYY-MM-DD
if exists(vd.date)
    add_field(qa.vd.vendange, "notice vendangée")
else
	add_field(qa.vd.vendange, "notice jamais vendangée")
end

# 099 : support
marc_map(099t, bib.type)
if any_match(bib.type, "PE")
	copy_field(_id, bib.perio_ccode)
	lookup(bib.perio_ccode, "/home/kibini/kibini_prod/etc/catmandu_lk_perio_ccode.txt", sep_char:"|", default:no_abo)
end


if exists(bib.type)
    add_field(qa.bib.type, "support spécifié")
else
	add_field(qa.bib.type, "support non spécifié")
end
lookup(bib.type, "/home/kibini/kibini_prod/etc/catmandu_lk_support.txt", sep_char:"|")

# 100
marc_map('100/9-12',bib.date)
if any_match(bib.date, "\d{4}")
    add_field(qa.bib.date, "date publication spécifiée")
else
    add_field(qa.bib.date, "date publication non spécifiée")
end

# 101 : langue
marc_map(101a,bib.language, join:"###")
if exists(bib.language)
    add_field(qa.bib.language, "langue spécifiée")
else
	add_field(qa.bib.language, "langue non spécifiée")
end
split_field(bib.language,'###')
lookup(bib.language.*, "/home/kibini/kibini_prod/etc/catmandu_lk_langues.txt", sep_char:'|')

# 200 : titre
marc_map(200ae,bib.title.$append, join:", ")

# 210 : éditeur
marc_map(210c,bib.publisher.$append, join:", ")

# 339 : public
marc_map(339a,bib.audience)
if exists(bib.audience)
    add_field(qa.bib.audience, "public spécifié")
else
	add_field(qa.bib.audience, "public non spécifié")
end
lookup(bib.audience, "/home/kibini/kibini_prod/etc/catmandu_lk_publics.txt", sep_char:'|')

# 34? : ean


# 600 : sujet
marc_map(600ab,bib.subject.$append, join:", ")
marc_map(600ab,bib.subject_main.$append, join:", ")
marc_map(606axyz,bib.subject.$append, join:" -- ")
marc_map(606a,bib.subject_main.$append, join:" -- ")
marc_map(609axyz,bib.subject.$append, join:" -- ")
marc_map(609a,bib.subject_main.$append, join:" -- ")

# 700 : auteur / contributeur
marc_map(700abf,bib.creator.$append, join:", ")
marc_map(701abf,bib.creator.$append, join:", ")
marc_map(710af,bib.creator.$append, join:", ")
marc_map(711af,bib.creator.$append, join:", ")

# Comment faire pour récupérer aussi id_auth et les envoyer dans autre champ ?
#marc_map(700abf39,bib.creator.$append, join:"###")
#marc_map(701abf39,bib.creator.$append, join:"###")
#marc_map(710af39,bib.creator.$append, join:"###")
#marc_map(711af39,bib.creator.$append, join:"###")
#split_field(bib.creator.*,'###')

marc_map(702abf,bib.contributor.$append, join:", ")
marc_map(712af,bib.contributor.$append, join:", ")

# 801 : agence de catalogage
marc_map(801b,bib.agence_cat.$append, join:", ")
if exists(bib.audience)
    add_field(qa.bib.agence_cat, "agence de catalogage spécifiée")
else
	add_field(qa.bib.agence_cat, "agence de catalogage non spécifiée")
end
copy_field(bib.agence_cat,bib.agence_cat_nor)
lookup(bib.agence_cat_nor.*, "/home/kibini/kibini_prod/etc/catmandu_lk_agence_cata.txt", sep_char:'|')

# Présence d'un id type isbn, issn, ean
if exists(bib.identifier)
    add_field(vd.identifier,'isbn issn ean présent')
    # ajout type à un champ ?
else
	add_field(vd.identifier,'isbn issn ean présent')
end

# items 
#marc_map(99502459bcefhkoprwy, bib.items.$append, join:"###", split:0)
#split_field(bib.items.*,'###')
#if exists(bib.items)
#    add_field(bib.count_items, 0)
#end

copy_field(_id, biblionumber)


retain(biblionumber, bib, qa)
